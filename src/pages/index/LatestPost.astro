---
import { fetchPosts, formatDate, API_BASE_URL } from '../../utils';
import { marked } from 'marked';
import '../../styles/lastestPost.css';

const apiUrl = `${API_BASE_URL}/blogs?populate=image&_limit=25`; 
const blogs = await fetchPosts(apiUrl);

const sortedBlogs = blogs?.data?.sort((a, b) => {
  const dateA = a.publishedAt ? new Date(a.publishedAt).getTime() : 0; 
  const dateB = b.publishedAt ? new Date(b.publishedAt).getTime() : 0;
  return dateB - dateA;
});
const latestPost = sortedBlogs && sortedBlogs.length > 0 ? sortedBlogs[0] : null;

if (latestPost && Array.isArray(latestPost.content)) {
  const plainContent = latestPost.content
    .map(block => 
      block.children
        .map(child => 
          child.text ? `<p>${marked(child.text)}</p>` : '' 
        ).join('')
    ).join('');

  const shortContent = plainContent.length > 400 
    ? `${plainContent.slice(0, 400)}...` 
    : plainContent;

  latestPost.shortContentHTML = shortContent;
} else if (latestPost) {
  latestPost.shortContentHTML = '<p>Contenido no disponible</p>';
}

---

{latestPost ? (
  <div class="latest-post container">
    <h2>Lee la última publicación del blog</h2>
    <article class="blog-post container">
      {latestPost.image?.url ? (
        <img 
          src={`http://localhost:1337${latestPost.image.url}`} 
          alt={latestPost.title}
          loading="lazy"
        />
      ) : (
        <p>No hay imagen disponible.</p>
      )}

      <div class="blog-content">
        <h3>{latestPost.title}</h3>
        <p class="post-date">Publicado el: {formatDate(latestPost.publishedAt)}</p>

        <div class="post-content" set:html={latestPost.shortContentHTML}></div>
        <a href={`/blog/${latestPost.slug}`} class="button primary">
          Leer más...
        </a>
      </div>
    </article>
  </div>
) : (
  <p>No hay publicaciones disponibles.</p>
)}
