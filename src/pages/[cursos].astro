---
import BaseLayout from "../layout/BaseLayout.astro";
import { courseList } from "../data/courseList";
import CourseContainer from "../components/courseCard/CourseContainer.astro";
import { cleanLink } from "../utils";
import { SEO } from "../constants/seo";

import "../styles/Cursos.css";

export async function getStaticPaths() {
    return courseList
        .filter((course) => !course.isStatic)
        .map((course) => ({
            params: { cursos: cleanLink(course.link) },
        }));
}

const { cursos } = Astro.params;

const course = courseList.find(
    (course) => cleanLink(course.link) === cursos && !course.isStatic,
);

if (!course) {
    throw new Error(`Curso con link "${cursos}" no encontrado.`);
}

const filteredCourses = courseList.filter(
    (c) => cleanLink(c.link) !== cursos && !c.isStatic,
);
const {
    titlePage,
    subtitle,
    imageSrc,
    shortDescription,
    longDescription,
    whatYouWillLearn,
    durationPrice,
    materials,
    forWhom,
} = course;

// Metadata
const title = titlePage
    ? `${titlePage} - Silvia Mendoza Make Up`
    : SEO.DEFAULT_TITLE;

const description = shortDescription
    ? `${shortDescription}`
    : SEO.DEFAULT_DESCRIPTION;

const image = imageSrc ? `${imageSrc}` : SEO.DEFAULT_IMAGE;
---

<BaseLayout title={title} description={description} image={image}>
    <div class="container courseHeader">
        <img
            src={imageSrc}
            alt={titlePage}
            class="courseImage"
            transition:name={titlePage}
        />
        <div class="courseText">
            <h1 class="courseTitle">{titlePage}</h1>
            <h2>{subtitle}</h2>

            <div class="longDescription">
                {
                    typeof longDescription === "string" && (
                        <p>{longDescription}</p>
                    )
                }

                <h3>Lo que aprenderás</h3>
                {
                    Array.isArray(whatYouWillLearn) && (
                        <ul>
                            {whatYouWillLearn.map((item) => (
                                <li>{item}</li>
                            ))}
                        </ul>
                    )
                }

                <h3>Para quién es este curso</h3>
                <p>{forWhom}</p>

                <h3>Duración y Precio</h3>
                {
                    Array.isArray(durationPrice) && (
                        <ul class="durationPrice">
                            {durationPrice.map((item) => (
                                <li>{item}</li>
                            ))}
                        </ul>
                    )
                }

                <h3>Materiales incluidos</h3>
                <p class="materials">{materials}</p>
            </div>
            <a href="https://wa.me/601532809" class="button primary">
                Solicitar más información
            </a>
        </div>
    </div>

    {
        filteredCourses.length > 0 && (
            <CourseContainer
                courses={filteredCourses}
                title="También te interesarán estos otros cursos"
            />
        )
    }
</BaseLayout>
